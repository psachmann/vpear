// <copyright file="EntityBase.cs" company="Patrick Sachmann">
// Copyright (c) Patrick Sachmann. All rights reserved.
// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.
// </copyright>

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;

namespace VPEAR.Server.Db
{
    /// <summary>
    /// Base class for all db entities.
    /// NOTE: All db entities should derive from this class.
    /// </summary>
    /// <typeparam name="TKey">Type of the db id.</typeparam>
    public abstract class EntityBase<TKey> : IEntityTypeConfiguration<EntityBase<TKey>>
        where TKey : struct, IEquatable<TKey>
    {
        /// <summary>
        /// Gets or sets the creation date time.
        /// NOTE: Auto generated by ef core.
        /// </summary>
        /// <value>The date time, when the specific item was created.</value>
        public DateTimeOffset CreatedAt { get; set; }

        /// <summary>
        /// Gets or sets the unique id.
        /// NOTE: Auto generated by ef core.
        /// </summary>
        /// <value>The unique id, which is the key in the database.</value>
        public TKey Id { get; set; }

        /// <summary>
        /// Gets or sets the concurrency token.
        /// NOTE: Auto generated by ef core.
        /// </summary>
        /// <value>The concurrency token for the specific item.</value>
        public DateTimeOffset ModifiedAt { get; set; }

        /// <inheritdoc/>
        public void Configure(EntityTypeBuilder<EntityBase<TKey>> builder)
        {
            builder.HasKey(e => e.Id);

            builder.Property(e => e.CreatedAt)
                .IsRequired()
                .ValueGeneratedOnAdd();

            builder.Property(e => e.Id)
                .IsRequired()
                .ValueGeneratedOnAdd();

            builder.Property(e => e.ModifiedAt)
                .IsConcurrencyToken()
                .IsRequired()
                .IsRowVersion()
                .ValueGeneratedOnAddOrUpdate();
        }
    }
}
